// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Å–µ –º–æ–¥–µ–ª–∏
import Exhibit, { seedExhibits } from './Exhibit.js';
import { Game, seedGames } from './Game.js';
import { Quiz, seedQuizzes } from './Quiz.js';
import Review, { seedReviews } from './Review.js';
import { Category, seedCategories } from './Category.js';
import User from './User.js';
import Event from './Event.js';
import EventRegistration from './EventRegistration.js';
import Ticket from './Ticket.js';

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º –æ—Ç–Ω–æ—à–µ–Ω–∏—è –º–µ–∂–¥—É –º–æ–¥–µ–ª—è–º–∏
const setupAssociations = () => {
  // –û—Ç–Ω–æ—à–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –±–∏–ª–µ—Ç–æ–≤
  User.hasMany(Ticket, { foreignKey: 'userId' });
  Ticket.belongsTo(User, { foreignKey: 'userId' });

  // –û—Ç–Ω–æ—à–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–π –Ω–∞ —Å–æ–±—ã—Ç–∏—è
  User.hasMany(EventRegistration, { foreignKey: 'userId' });
  EventRegistration.belongsTo(User, { foreignKey: 'userId' });

  // –û—Ç–Ω–æ—à–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏–π –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–π
  Event.hasMany(EventRegistration, { foreignKey: 'eventId' });
  EventRegistration.belongsTo(Event, { foreignKey: 'eventId' });

  // –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è
  // (—Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Ö –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤—Å–µ—Ö –Ω–∞—á–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
const seedDatabase = async (force = false) => {
  console.log('üå± –ù–∞—á–∏–Ω–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');
  
  try {
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ç–Ω–æ—à–µ–Ω–∏—è –º–µ–∂–¥—É –º–æ–¥–µ–ª—è–º–∏
    setupAssociations();
    
    // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –≤—Å–µ –º–æ–¥–µ–ª–∏ –±–µ–∑ force = true, —á—Ç–æ–±—ã —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –¥–∞–Ω–Ω—ã–µ –º–µ–∂–¥—É –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–º–∏
    console.log('–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –º–æ–¥–µ–ª–µ–π —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö...');
    await Promise.all([
      Category.sync({ force: false }),
      Review.sync({ force: false }),
      Exhibit.sync({ force: false }),
      Game.sync({ force: false }),
      Quiz.sync({ force: false }),
      User.sync({ force: false }),
      Event.sync({ force: false }),
      EventRegistration.sync({ force: false }),
      Ticket.sync({ force: false })
    ]);
    console.log('‚úÖ –í—Å–µ –º–æ–¥–µ–ª–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É—é—Ç –ª–∏ —É–∂–µ –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑–µ, –ø—Ä–µ–∂–¥–µ —á–µ–º –ø—ã—Ç–∞—Ç—å—Å—è —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–µ
    const categoriesCount = await Category.count();
    const exhibitsCount = await Exhibit.count();
    const gamesCount = await Game.count();
    const quizzesCount = await Quiz.count();
    const reviewsCount = await Review.count();
    const usersCount = await User.count();

    // –¢–æ–ª—å–∫–æ –∑–∞–ø–æ–ª–Ω—è–µ–º —Ç–∞–±–ª–∏—Ü—ã, –µ—Å–ª–∏ –æ–Ω–∏ –ø—É—Å—Ç—ã
    if (categoriesCount === 0) {
      await seedCategories(false);
      console.log('‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã');
    } else {
      console.log(`‚úì –£–∂–µ –∏–º–µ–µ—Ç—Å—è ${categoriesCount} –∫–∞—Ç–µ–≥–æ—Ä–∏–π –≤ –±–∞–∑–µ`);
    }
    
    if (exhibitsCount === 0) {
      await seedExhibits(false);
      console.log('‚úÖ –≠–∫—Å–ø–æ–Ω–∞—Ç—ã –∑–∞–ø–æ–ª–Ω–µ–Ω—ã');
    } else {
      console.log(`‚úì –£–∂–µ –∏–º–µ–µ—Ç—Å—è ${exhibitsCount} —ç–∫—Å–ø–æ–Ω–∞—Ç–æ–≤ –≤ –±–∞–∑–µ`);
    }
    
    if (gamesCount === 0) {
      await seedGames(false);
      console.log('‚úÖ –ò–≥—Ä—ã –∑–∞–ø–æ–ª–Ω–µ–Ω—ã');
    } else {
      console.log(`‚úì –£–∂–µ –∏–º–µ–µ—Ç—Å—è ${gamesCount} –∏–≥—Ä –≤ –±–∞–∑–µ`);
    }
    
    if (quizzesCount === 0) {
      await seedQuizzes(false);
      console.log('‚úÖ –í–∏–∫—Ç–æ—Ä–∏–Ω—ã –∑–∞–ø–æ–ª–Ω–µ–Ω—ã');
    } else {
      console.log(`‚úì –£–∂–µ –∏–º–µ–µ—Ç—Å—è ${quizzesCount} –≤–∏–∫—Ç–æ—Ä–∏–Ω –≤ –±–∞–∑–µ`);
    }
    
    if (reviewsCount === 0) {
      await seedReviews(false);
      console.log('‚úÖ –û—Ç–∑—ã–≤—ã –∑–∞–ø–æ–ª–Ω–µ–Ω—ã');
    } else {
      console.log(`‚úì –£–∂–µ –∏–º–µ–µ—Ç—Å—è ${reviewsCount} –æ—Ç–∑—ã–≤–æ–≤ –≤ –±–∞–∑–µ`);
    }

    if (usersCount === 0) {
      // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∞ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
      await User.create({
        email: 'admin@museum.com',
        password: 'admin123',
        name: 'Admin User',
        role: 'admin'
      });
      console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –∞–¥–º–∏–Ω —Å–æ–∑–¥–∞–Ω');
    } else {
      console.log(`‚úì –£–∂–µ –∏–º–µ–µ—Ç—Å—è ${usersCount} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ`);
    }

    console.log('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞!');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', error);
    throw error;
  }
};

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Å–µ –º–æ–¥–µ–ª–∏ –∏ —Ñ—É–Ω–∫—Ü–∏—é –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è
export {
  Exhibit,
  Game,
  Quiz,
  Review,
  Category,
  User,
  Event,
  EventRegistration,
  Ticket,
  seedDatabase
}; 

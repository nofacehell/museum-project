import { DataTypes } from 'sequelize';
import sequelize from '../config/sequelize.js';

// –ú–æ–¥–µ–ª—å –æ—Ç–∑—ã–≤–æ–≤ –æ –º—É–∑–µ–µ
const Review = sequelize.define('Review', {
  id: {
    type: DataTypes.INTEGER,
    primaryKey: true,
    autoIncrement: true
  },
  name: {
    type: DataTypes.STRING,
    allowNull: false
  },
  email: {
    type: DataTypes.STRING,
    allowNull: true,
    validate: {
      isEmail: true
    }
  },
  rating: {
    type: DataTypes.INTEGER,
    allowNull: false,
    validate: {
      min: 1,
      max: 5
    }
  },
  comment: {
    type: DataTypes.TEXT,
    allowNull: false
  },
  images: {
    type: DataTypes.TEXT,
    allowNull: true,
    comment: 'JSON —Å—Ç—Ä–æ–∫–∞ —Å –º–∞—Å—Å–∏–≤–æ–º URL –∏–ª–∏ data:image —Å—Ç—Ä–æ–∫',
    get() {
      const rawValue = this.getDataValue('images');
      if (rawValue) {
        try {
          return JSON.parse(rawValue);
        } catch (e) {
          console.error('Error parsing images JSON:', e);
          return [];
        }
      }
      return [];
    },
    set(value) {
      if (Array.isArray(value)) {
        // –ï—Å–ª–∏ –º–∞—Å—Å–∏–≤ –ø—É—Å—Ç–æ–π, —Å–æ—Ö—Ä–∞–Ω—è–µ–º null
        if (value.length === 0) {
          this.setDataValue('images', null);
        } else {
          this.setDataValue('images', JSON.stringify(value));
        }
      } else if (typeof value === 'string' && value.startsWith('data:image')) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—Ç—Ä–æ–∫–∞ - —ç—Ç–æ data URL
        // –ï—Å–ª–∏ –ø—Ä–∏—à–ª–∞ –æ–¥–Ω–∞ —Å—Ç—Ä–æ–∫–∞ (data URL), —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ—ë –∫–∞–∫ –º–∞—Å—Å–∏–≤ —Å –æ–¥–Ω–∏–º —ç–ª–µ–º–µ–Ω—Ç–æ–º
        this.setDataValue('images', JSON.stringify([value]));
      } else {
        // –í–æ –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–ª—É—á–∞—è—Ö (–≤–∫–ª—é—á–∞—è –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ) —Å–æ—Ö—Ä–∞–Ω—è–µ–º null
        this.setDataValue('images', null);
      }
    }
  },
  image: {
    type: DataTypes.VIRTUAL,
    get() {
      const images = this.images;
      return images && images.length > 0 ? images[0] : null;
    },
    set(value) {
      if (value) {
        this.images = [value];
      }
    }
  },
  exhibitId: {
    type: DataTypes.INTEGER,
    allowNull: true,
    references: {
      model: 'exhibits',
      key: 'id'
    }
  },
  status: {
    type: DataTypes.STRING,
    allowNull: false,
    defaultValue: 'pending',
    validate: {
      isIn: [['pending', 'approved', 'rejected']]
    }
  },
  approved: {
    type: DataTypes.BOOLEAN,
    allowNull: false,
    defaultValue: false,
    set(value) {
      this.setDataValue('approved', value);
      // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º status —Å approved
      if (value === true) {
        this.setDataValue('status', 'approved');
      } else if (value === false) {
        this.setDataValue('status', 'rejected');
      }
    }
  },
  visitDate: {
    type: DataTypes.DATE,
    allowNull: true
  }
}, {
  timestamps: true,
  tableName: 'reviews',
  hooks: {
    beforeSave: (review) => {
      // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º approved —Å–æ status
      if (review.status === 'approved') {
        review.approved = true;
      } else if (review.status === 'rejected') {
        review.approved = false;
      }
    }
  }
});

// –î–∞–Ω–Ω—ã–µ –¥–ª—è –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è
const defaultReviews = [
  {
    name: "–ê–ª–µ–∫—Å–µ–π –ü–µ—Ç—Ä–æ–≤",
    email: "alex@example.com",
    rating: 5,
    comment: "–ü–æ—Ç—Ä—è—Å–∞—é—â–∞—è —ç–∫—Å–ø–æ–∑–∏—Ü–∏—è! –û—Å–æ–±–µ–Ω–Ω–æ –≤–ø–µ—á–∞—Ç–ª–∏–ª–∏ —Å—Ç–∞—Ä—ã–µ –∫–æ–º–ø—å—é—Ç–µ—Ä—ã –∏ –∏–≥—Ä–æ–≤—ã–µ –ø—Ä–∏—Å—Ç–∞–≤–∫–∏. –û—á–µ–Ω—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ –±—ã–ª–æ —É–≤–∏–¥–µ—Ç—å —ç–≤–æ–ª—é—Ü–∏—é —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∏ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 50 –ª–µ—Ç. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–∏–¥—É –µ—â—ë —Ä–∞–∑ —Å –¥–µ—Ç—å–º–∏!",
    exhibitId: 1,
    approved: true,
    visitDate: new Date(2023, 5, 15)
  },
  {
    name: "–ú–∞—Ä–∏—è –ò–≤–∞–Ω–æ–≤–∞",
    email: "maria@example.com",
    rating: 4,
    comment: "–ò–Ω—Ç–µ—Ä–µ—Å–Ω–∞—è —ç–∫—Å–ø–æ–∑–∏—Ü–∏—è. –ü–æ–Ω—Ä–∞–≤–∏–ª–∏—Å—å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —ç–∫—Å–ø–æ–Ω–∞—Ç—ã –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–∏–≥—Ä–∞—Ç—å –Ω–∞ —Å—Ç–∞—Ä—ã—Ö –ø—Ä–∏—Å—Ç–∞–≤–∫–∞—Ö. –•–æ—Ç–µ–ª–æ—Å—å –±—ã –±–æ–ª—å—à–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è—Ö.",
    exhibitId: null,
    approved: true,
    visitDate: new Date(2023, 6, 22)
  },
  {
    name: "–î–º–∏—Ç—Ä–∏–π –°–∏–¥–æ—Ä–æ–≤",
    email: "dmitry@example.com",
    rating: 5,
    comment: "–ú—É–∑–µ–π –ø—Ä–µ–≤–∑–æ—à–µ–ª –≤—Å–µ –æ–∂–∏–¥–∞–Ω–∏—è! –≠–∫—Å–∫—É—Ä—Å–æ–≤–æ–¥ –æ—á–µ–Ω—å —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–ª –∏—Å—Ç–æ—Ä–∏—é –∫–∞–∂–¥–æ–≥–æ —ç–∫—Å–ø–æ–Ω–∞—Ç–∞. –û—Å–æ–±–µ–Ω–Ω–æ –ø–æ–Ω—Ä–∞–≤–∏–ª—Å—è —Ä–∞–∑–¥–µ–ª —Å –º–æ–±–∏–ª—å–Ω—ã–º–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–∞–º–∏ - –±—ã–ª–æ –∑–∞–±–∞–≤–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç—è–º, –∫–∞–∫–∏–º–∏ –æ–≥—Ä–æ–º–Ω—ã–º–∏ –±—ã–ª–∏ –ø–µ—Ä–≤—ã–µ –º–æ–±–∏–ª—å–Ω–∏–∫–∏.",
    exhibitId: 3,
    approved: true,
    visitDate: new Date(2023, 7, 10)
  }
];

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –æ—Ç–∑—ã–≤–∞–º–∏
const seedReviews = async (force = false) => {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü–µ
    const count = await Review.count();
    
    // –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –∏–ª–∏ —É–∫–∞–∑–∞–Ω —Ñ–ª–∞–≥ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è
    if (count === 0 || force) {
      console.log('üì• –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –æ—Ç–∑—ã–≤–æ–≤ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö...');
      
      // –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å–∏ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ
      for (const item of defaultReviews) {
        await Review.create(item);
      }
      
      console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ ${defaultReviews.length} —Ç–µ—Å—Ç–æ–≤—ã—Ö –æ—Ç–∑—ã–≤–æ–≤`);
    } else {
      console.log(`‚ÑπÔ∏è –í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É–∂–µ –µ—Å—Ç—å ${count} –æ—Ç–∑—ã–≤–æ–≤. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö.`);
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –æ—Ç–∑—ã–≤–æ–≤:', error);
  }
};

export { Review, seedReviews }; 
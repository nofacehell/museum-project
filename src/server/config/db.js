import mongoose from 'mongoose';
import dotenv from 'dotenv';
import { setUseDefaultData as setExhibitsUseDefaultData } from '../routes/exhibits.js';
import { setUseDefaultData as setGamesUseDefaultData } from '../routes/games.js';
import { setUseDefaultData as setQuizzesUseDefaultData } from '../routes/quizzes.js';

dotenv.config();

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è URI –≤ .env —Ñ–∞–π–ª–µ
if (!process.env.MONGODB_URI) {
  console.warn('‚ö†Ô∏è MONGODB_URI –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ. –†–∞–±–æ—Ç–∞ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –±—É–¥–µ—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞.');
  console.warn('‚ö†Ô∏è –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç—Å—è –Ω–∞ —Ä–∞–±–æ—Ç—É —Å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏.');
  
  // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∑–∞–≥–ª—É—à–∫–∏ –¥–ª—è –≤—Å–µ—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤
  setExhibitsUseDefaultData(true);
  setGamesUseDefaultData(true);
  setQuizzesUseDefaultData(true);
}

const connectDB = async () => {
  try {
    // –ï—Å–ª–∏ –Ω–µ—Ç URI, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º false
    if (!process.env.MONGODB_URI) {
      return false;
    }
    
    const conn = await mongoose.connect(process.env.MONGODB_URI);
    
    console.log(`üåø MongoDB –ø–æ–¥–∫–ª—é—á–µ–Ω–∞: ${conn.connection.host}`);
    
    // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ —Ä–µ–∂–∏–º –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    setExhibitsUseDefaultData(false);
    setGamesUseDefaultData(false);
    setQuizzesUseDefaultData(false);
    
    return true;
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB: ${error.message}`);
    
    // –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
    if (error.name === 'MongoNetworkError') {
      console.error('‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–∞ —Å —Å–µ—Ç–µ–≤—ã–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ MongoDB. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –∑–∞–ø—É—â–µ–Ω –ª–∏ —Å–µ—Ä–≤–µ—Ä MongoDB.');
    } else if (error.name === 'MongoServerSelectionError') {
      console.error('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å —Å–µ—Ä–≤–µ—Ä MongoDB. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å URI –∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞.');
    } else if (error.name === 'MongoParseError') {
      console.error('‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç URI –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB.');
    }
    
    console.log('‚ÑπÔ∏è –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ —Ä–∞–±–æ—Ç—É —Å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏...');
    
    // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∑–∞–≥–ª—É—à–∫–∏ –¥–ª—è –≤—Å–µ—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤
    setExhibitsUseDefaultData(true);
    setGamesUseDefaultData(true);
    setQuizzesUseDefaultData(true);
    
    return false;
  }
};

export default connectDB; 